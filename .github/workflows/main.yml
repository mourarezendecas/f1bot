---
name: Build and push Python images to AWS ECR

on:
  push:
    branches: [master]

jobs:
  build-and-push:
    name: Build and push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          mask-aws-account-id: false

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Build e push da imagem Docker com vari√°veis de ambiente
      - name: Build, Tag, and Push the Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: f1bot
          IMAGE_TAG: latest
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
          CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
          CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}
          APP_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          APP_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          APP_AWS_REGION: ${{ secrets.AWS_REGION }}
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        run: |
          docker build \
            --build-arg ACCESS_TOKEN=$ACCESS_TOKEN \
            --build-arg ACCESS_TOKEN_SECRET=$ACCESS_TOKEN_SECRET \
            --build-arg CONSUMER_KEY=$CONSUMER_KEY \
            --build-arg CONSUMER_SECRET=$CONSUMER_SECRET \
            --build-arg AWS_ACCESS_KEY_ID=$APP_AWS_ACCESS_KEY_ID \
            --build-arg AWS_SECRET_ACCESS_KEY=$APP_AWS_SECRET_ACCESS_KEY \
            --build-arg AWS_REGION=$APP_AWS_REGION \
            --build-arg BUCKET_NAME=$BUCKET_NAME \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

